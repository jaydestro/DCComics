name: Build and deploy Python app to Azure Web App - dccomics-web-dev

env:
  MONGODB_SERVER_NAME: dccomics-mongodb-dev # Replace with your Azure Cosmos DB name
  AZURE_WEBAPP_NAME: dccomics-web-dev # Replace with your Azure Web App name
  RESOURCE_GROUP: dccomics # Replace with your Azure Resource Group name
  PYTHON_VERSION: 3.9 # Replace with your Python version
  WORKING_DIRECTORY: '.'

on:
  push:
    branches:
      - development
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-bicep:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check if resources tagged with "development" exist
        run: |
          # Use the Azure CLI to list resources with the specified tag

          output=$(az resource list --tag "deployment=development" --query "[?resourceGroup == '${{ env.RESOURCE_GROUP }}']" -o tsv)
          if [[ -z "$output" ]]; then
            echo "No resources tagged with 'deployment=development' found. Proceeding with Bicep deployment."
            az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file ./deploy/dev.bicep --parameters location=eastus
          else
            echo "Resources tagged with 'deployment=development' exist. Skipping Bicep deployment."
          fi
        shell: bash

  build:
    runs-on: ubuntu-latest
    needs: deploy-bicep

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"


      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

        # install dependencies
      - name: python install
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          sudo apt-get update
          sudo apt install python3-venv
          python -m venv --copies antenv
          source antenv/bin/activate
          pip install setuptools
          pip install -r requirements.txt

#      - name: Upload artifact for deployment jobs
#        uses: actions/upload-artifact@v2
#        with:
#          name: python-app
#          path: |
#            .
#            !venv/

  retrieve-mongodb-uri:
    runs-on: ubuntu-latest
    needs: build # Wait for the Python application build to complete

    steps:
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Cosmos DB connection string
        id: get-cosmosdb-connection-string
        run: |
          cosmos_db_connection_string=$(az cosmosdb keys list --name ${{ env.MONGODB_SERVER_NAME }} --resource-group ${{env.RESOURCE_GROUP}} --type connection-strings --query "connectionStrings[0].connectionString" --output tsv)
          echo "Cosmos DB connection string: $cosmos_db_connection_string"
          echo "::set-output name=mongodb_uri::$cosmos_db_connection_string"

  deploy:
    runs-on: ubuntu-latest
    needs: [build, deploy-bicep, retrieve-mongodb-uri]

    steps:
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: |
            .
            !venv/
            node_modules/

      - uses: azure/appservice-settings@v1
        with:
          app-name: "${{ env.AZURE_WEBAPP_NAME }}"
          mask-inputs: false
          general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}", "MONGODB_URI": "${{ steps.retrieve-mongodb-uri.outputs.mongodb_uri }}", "SCM_DO_BUILD_DURING_DEPLOYMENT": "true"}' #'General configuration settings as Key Value pairs'
      
      - name: Activate Virtual Environment
        run: source antenv/bin/activate

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "dccomics-web-dev"
          package: "."
          slot-name: "production"
          startup-command: "gunicorn -b 0.0.0.0:8000 app:app"